services:
  api:
    build: .
    ports:
      - "3000:3000"
    command: ["/bin/sh", "-c", "npx migrate up users && npx migrate up roles && node src/workers/api/index.js"]
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy

  rabbit-worker:
    build: .
    command: ["node", "src/workers/rabbitMQ/rabbit-worker.js"]
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
  mongodb:
    image: mongo:latest
    container_name: mongodb-service
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    ports:
      - 27017:27017
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'mongodb-service:27017'}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30

  redis:
    image: redis:latest
    container_name: redis-service
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      retries: 5
      timeout: 5s

  rabbitmq:
    image: rabbitmq:3.11-management-alpine
    container_name: rabbitmq-service
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 5s
      timeout: 30s
      retries: 5
